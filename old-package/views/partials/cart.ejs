<style>
  #cartSidebar {
    overflow-y: scroll !important;
    scrollbar-width: thin;
    scrollbar-color: #fff #222;
    z-index: 1;
  }

  #cartSidebar::-webkit-scrollbar {
    width: 10px;
    z-index: 5;
  }

  #cartSidebar::-webkit-scrollbar-thumb {
    background-color: #fff;
  }

  #cartSidebar::-webkit-scrollbar-track {
    background-color: #222;
  }

  @keyframes marqueeAnimation {
    0% {
      transform: translateX(100%);
    }
    100% {
      transform: translateX(-100%);
    }
  }

  .marquee-container {
    display: flex;
    justify-content: space-between;
    width: 100%;
    background-color: #222;
    overflow: hidden;
    padding: 1vh;
  }

  p.marquee {
    font-size: 2vh;
    color: #fff;
    text-align: center;
    text-transform: uppercase;
    margin: 0;
    white-space: nowrap;
    animation: marqueeAnimation 20s linear infinite;
  }
</style>

<div
  id="cartSidebar"
  class="text-white"
  style="
    padding: 2vh;
    position: fixed;
    top: 0;
    right: -400px;
    height: 100vh;
    width: 400px;
    transition: right 0.3s ease-in-out;
    background-color: #222;
    z-index: 1000;
  "
>
  <div
    class="d-flex container justify-content-between p-0"
    style="border-bottom: 1px solid lightgrey"
  >
    <button
      type="button"
      class="mt-2"
      aria-label="Close"
      onclick="closeCart()"
      style="
        color: #fff;
        background-color: transparent;
        border: none;
        outline: none;
      "
    >
      <span aria-hidden="true" style="font-size: 2vh; cursor: pointer"
        >&#9587;</span
      >
    </button>
    <h4 class="mt-3 mb-3">Your Cart</h4>
  </div>

  <div class="marquee-container">
    <p class="marquee" style="margin-right: 5vh">
      10% OFF ON ALL PRODUCTS, LIMITED PERIOD OFFER!
    </p>
    <p class="marquee">10% OFF ON ALL PRODUCTS, LIMITED PERIOD OFFER!</p>
  </div>

  <ul class="list-group mb-3 mt-3" id="cartItemsContainer" style="color: #000">
    <li class="list-group-item d-flex justify-content-between">
      <span>Cart is Empty.</span>
      <strong>Add Some Products</strong>
    </li>
  </ul>
  <button class="btn btn-light btn-lg btn-block" onclick="proceedToCheckOut()">
    Proceed to Checkout
  </button>
</div>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  async function proceedToCheckOut() {
    await axios
      .get("/confirm")
      .then((response) => {
        window.location.href = "/confirm";
      })
      .catch((err) => {
        if (err.response.status === 502) {
          showAlert("Please add items to cart", "danger");
        } else {
          window.location.href = "/login";
        }
      });
  }

  async function openCart() {
    document.getElementById("cartSidebar").style.right = "0";
    try {
      const response = await axios.get("/getprofile");
      const userProfile = response.data.userProfile;

      if (userProfile.cart.length === 0) {
        return 0;
      }

      const cartItemsContainer = document.getElementById("cartItemsContainer");
      cartItemsContainer.innerHTML = "";

      userProfile.cart.forEach(async (cartItem) => {
        await axios
          .get(`/api/products/${cartItem.itemId}`)
          .then((response) => response.data)
          .then((productDetails) => {
            const cartItemElement = document.createElement("div");
            cartItemElement.className = `row main align-items-center card_${cartItem.itemId}`;

            cartItemElement.innerHTML = `
                      <li class="list-group-item d-flex flex-column  mb-2 justify-content-between">
                          <div class="d-flex justify-content-between p-0 align-items-center" style="width:100%;height:auto;padding:0px;">
                              <div class="d-flex justify-content-center align-content-center" style="width:30%;height:auto;border-radius:5px;">
                                  <img class="img-fluid" src="${
                                    productDetails.imageLink[0]
                                  }" style="height:auto;width:100%;border-radius:5px;" >
                              </div>
                              <div style="width:70%;display:flex;flex-wrap:wrap;text-align:left;align-items:flex-start;flex-direction:column;height:100%;">
                                  <div class="row text-muted" style="display:none;">${
                                    productDetails.category
                                  }</div>
                                  <div class="row ml-2" style="font-size:2.5vh;">${
                                    productDetails.name
                                  }</div>
                                  <div class="d-flex justify-content-flex-start align-items-center container">
                                      <a href="#" class="decrease${
                                        cartItem.itemId
                                      }">-</a>
                                      <a href="#" class="border p-1 m-2 itemQuantity${
                                        cartItem.itemId
                                      }">
                                          ${cartItem.quantity}
                                      </a>
                                      <a href="#" class="increase${
                                        cartItem.itemId
                                      }">+</a>
                                  </div>
                              </div>

                          </div>
                          <div class="mb-2 mt-2 single_item_total${
                            cartItem.itemId
                          }" style="font-size:1.3rem;font-weight:500;">Subtotal : <span style="font-weight:bold">&#8377;${
              productDetails.offeredPrice * cartItem.quantity
            }</span></div>
                      </li>
                      `;
            cartItemsContainer.append(cartItemElement);

            document
              .querySelector(`.decrease${cartItem.itemId}`)
              .addEventListener("click", async () => {
                await axios
                  .post("/decreaseItem", { itemId: cartItem.itemId })
                  .then((response) => {
                    quantity = response.data.newQuantity;
                    if (quantity === -1) {
                      document.querySelector(
                        `.card_${cartItem.itemId}`
                      ).innerHTML = "";
                      if (document.querySelector(".quantity-container")) {
                        document.querySelector(
                          ".quantity-container"
                        ).style.display = "none";
                      }
                      showAlert("Item removed from cart", "success");
                    } else {
                      document
                        .querySelectorAll(`.itemQuantity${cartItem.itemId}`)
                        .forEach((item) => {
                          item.value = quantity;
                          item.textContent = quantity;
                        });
                      document.querySelector(
                        `.single_item_total${cartItem.itemId}`
                      ).innerHTML =
                        'Subtotal : <span style="font-weight:bold">&#8377;' +
                        response.data.newQuantity *
                          productDetails.offeredPrice +
                        "</span>";
                      showAlert("Item quantity decreased", "success");
                    }
                  })
                  .catch((err) => alert("error " + err));
              });
            document
              .querySelector(`.increase${cartItem.itemId}`)
              .addEventListener("click", async () => {
                await axios
                  .post("/increaseItem", { itemId: cartItem.itemId })
                  .then((response) => {
                    document
                      .querySelectorAll(`.itemQuantity${cartItem.itemId}`)
                      .forEach((item) => {
                        item.value = response.data.newQuantity;
                        item.textContent = response.data.newQuantity;
                      });
                    document.querySelector(
                      `.single_item_total${cartItem.itemId}`
                    ).innerHTML =
                      'Subtotal : <span style="font-weight:bold">&#8377;' +
                      response.data.newQuantity * productDetails.offeredPrice +
                      "</span>";
                    showAlert("Item quantity increased", "success");
                  })
                  .catch((err) => alert("error " + err));
              });
            document
              .querySelector(`.deleteButton${cartItem.itemId}`)
              .addEventListener("click", async () => {
                await axios
                  .post("/removeItem", { itemId: cartItem.itemId })
                  .then((response) => {
                    quantity = response.data.newQuantity;
                    if (quantity === -1) {
                      document.querySelector(
                        `.card_${cartItem.itemId}`
                      ).innerHTML = "";
                      if (document.querySelector(".quantity-container")) {
                        document.querySelector(
                          ".quantity-container"
                        ).style.display = "none";
                      }
                      showAlert("Item removed from cart", "success");
                    }
                  })
                  .catch((err) => alert("error " + err));
              });
          })
          .catch((err) =>
            console.log("an error occurred fetching the items " + err)
          );
      });
    } catch (error) {
      console.log("Error fetching profile: ", error);
    }
  }

  function closeCart() {
    document.getElementById("cartSidebar").style.right = "-400px";
  }

  function calculateCartItemTotal(cartItem) {
    return cartItem.price * cartItem.quantity;
  }
</script>
